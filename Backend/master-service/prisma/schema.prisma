// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model SupplierMaster {
  customerMasterID  String @id @default(uuid())
  supplierTypeCode  String
  customerFunction  String
  lifeCycleStatus   String
  bankAccountType   String
  paymentTerms      String
  freight           String
}

model BusinessEntity {
  id                  Int      @id @default(autoincrement())
  businessEntityCode  String   @unique @db.VarChar(4)
  businessEntityName  String   @db.VarChar(30)
  street1             String   @db.VarChar(50)
  street2             String?  @db.VarChar(50)
  city                String   @db.VarChar(30)
  state               String   @db.VarChar(30)
  region              String?  @db.VarChar(50)
  country             String   @db.VarChar(30)
  pinCode             String   @db.VarChar(6)
  language            Language @default(EN) // New language field
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  businessUnits       BusinessUnit[]
  factoryUnit      FactoryUnit[]
  
  @@map("business_entities")
}

enum Language {
  EN  // English
  ES  // Spanish
  FR  // French
  DE  // German
  IT  // Italian
  NL  // Dutch
  ID  // Indonesian
  VI  // Vietnamese
}

model BusinessUnit {
  id                  Int             @id @default(autoincrement())
  businessUnitCode    String          @unique @db.VarChar(4)
  businessUnitDesc    String          @db.VarChar(30)
  street1             String          @db.VarChar(50)
  street2             String?         @db.VarChar(50)
  city                String          @db.VarChar(30)
  state               String          @db.VarChar(30)
  region              String?         @db.VarChar(50)
  country             String          @db.VarChar(30)
  pinCode             String          @db.VarChar(6)
  createdAt           DateTime        @default(now())
  updatedAt           DateTime        @updatedAt



  // Relationships
  businessEntityId    Int
  businessEntity      BusinessEntity  @relation(fields: [businessEntityId], references: [id])
  factoryUnitId       Int?
  factoryUnit         FactoryUnit?    @relation(fields: [factoryUnitId], references: [id])
  salesChannelId      Int?
  salesChannel        SalesChannel?   @relation(fields: [salesChannelId], references: [id])
  salesOfficeId       Int?
  salesOffice         SalesOffice?    @relation(fields: [salesOfficeId], references: [id])

  // Unique constraints
     @@map("business_units")
     
}

model SalesOffice {
  id                  Int      @id @default(autoincrement())
  salesOfficeCode     String   @unique @db.VarChar(4)
  salesOfficeDesc     String   @db.VarChar(30)
  street1             String   @db.VarChar(50)
  street2             String?  @db.VarChar(50)
  city                String   @db.VarChar(30)
  state               String   @db.VarChar(30)
  region              String?  @db.VarChar(50)
  country             String   @db.VarChar(30)
  pinCode             String   @db.VarChar(6)
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  businessUnits       BusinessUnit[]
  @@map("sales_offices")
}

model DeliveryLocation {
  id                  Int      @id @default(autoincrement())
  deliveryLocationCode String   @unique @db.VarChar(4)
  deliveryLocationName String   @db.VarChar(30)
  street1             String   @db.VarChar(50)
  street2             String?  @db.VarChar(50)
  city                String   @db.VarChar(30)
  state               String   @db.VarChar(30)
  region              String?  @db.VarChar(50)
  country             String   @db.VarChar(30)
  pinCode             String   @db.VarChar(6)
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  @@map("delivery_locations")
}

model FactoryUnit {
  id                  Int            @id @default(autoincrement())
  factoryUnitCode     String         @unique @db.VarChar(4)
  factoryUnitName     String         @db.VarChar(30)
  street1             String         @db.VarChar(50)
  street2             String?        @db.VarChar(50)
  city                String         @db.VarChar(30)
  state               String         @db.VarChar(30)
  region              String?        @db.VarChar(50)
  country             String         @db.VarChar(30)
  pinCode             String         @db.VarChar(6)
  factoryPhone        String         @db.VarChar(10)
  mobileNumber        String         @db.VarChar(10)
  factoryEmail        String         @db.VarChar(20)
  language            Language       @default(EN) // Added language dropdown
  businessEntityCode  String         @db.VarChar(4) // Added business entity reference
  createdAt           DateTime       @default(now())
  updatedAt           DateTime       @updatedAt

  businessUnits       BusinessUnit[]
  
  // Relation to BusinessEntity (optional, for easier queries)
  businessEntity      BusinessEntity? @relation(fields: [businessEntityCode], references: [businessEntityCode])

  @@map("factory_units")
}

model SalesChannel {
  id               Int      @id @default(autoincrement())
  salesChannelId   String   @unique @db.VarChar(4)
  salesChannelName String   @db.VarChar(30)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  businessUnits    BusinessUnit[]
  @@map("sales_channels")
}

model SalesTeam {
  id             Int      @id @default(autoincrement())
  salesTeamCode  String   @unique @db.VarChar(4)
  salesTeamName  String   @db.VarChar(30)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@map("sales_teams")
}


model SalesPerson {
  id                   Int      @id @default(autoincrement())
  SalesPersonId        String   @unique @db.VarChar(4)
  SalesPersonName      String   @db.VarChar(30) 
  street1              String   @db.VarChar(50)
  street2              String?  @db.VarChar(50)
  city                 String   @db.VarChar(30)
  state                String   @db.VarChar(30)
  region               String   @db.VarChar(50)
  country              String   @db.VarChar(30)
  pinCode              String   @db.VarChar(6) 
  phoneNumber          String   @db.VarChar(10) 
  mobileNumber         String   @db.VarChar(10) 
  email                String   @db.VarChar(20)
  department           String
  salesPersonRole      String   
  createdAt            DateTime @default(now()) 
  updatedAt            DateTime @updatedAt

  @@map("sales_persons")
}

model SourcingPerson {
  sourcingPersonId     String   @id @map("id")
  sourcingPersonName   String   @db.VarChar(30)
  sourcingPersonRole   String   
  street1             String   @db.VarChar(50)
  street2             String?  @db.VarChar(50)
  city                String   @db.VarChar(30)
  state               String   @db.VarChar(30)
  region              String   @db.VarChar(50)
  country             String   @db.VarChar(30)
  pinCode             String   @db.VarChar(6)
  phoneNumber         String   @db.VarChar(10)
  mobileNumber        String   @db.VarChar(10)
  email               String   @db.VarChar(20)
  department          String
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  @@map("sourcing_persons")
}