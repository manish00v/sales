import { Client } from '@elastic/elasticsearch';

// Configuration with better error handling
const elasticConfig = {
  node: process.env.ELASTICSEARCH_URL || 'http://localhost:9200',
  auth: {
    username: process.env.ELASTICSEARCH_USERNAME || 'elastic',
    password: process.env.ELASTICSEARCH_PASSWORD || 'changeme'
  },
  maxRetries: 3,
  requestTimeout: 30000,
  sniffOnStart: false,
  ssl: {
    rejectUnauthorized: false // Only for development
  }
};

const elasticClient = new Client(elasticConfig);

// Test connection with better logging
(async () => {
  try {
    const response = await elasticClient.ping();
    if (!response.body) {
      throw new Error('Empty response from Elasticsearch');
    }
    console.log('‚úÖ Elasticsearch connected successfully');
    
    // Verify basic operations
    const indices = await elasticClient.cat.indices({ format: 'json' });
    console.log(`‚ÑπÔ∏è Available indices: ${indices.body.length}`);
  } catch (error) {
    console.error('‚ùå Elasticsearch connection failed:', error.message);
    console.log('üîç Troubleshooting steps:');
    console.log('1. Ensure Elasticsearch is running: http://localhost:9200');
    console.log('2. Verify credentials (default: elastic/changeme)');
    console.log('3. Check if port 9200 is accessible');
    console.log('4. Try disabling security in elasticsearch.yml:');
    console.log('   xpack.security.enabled: false');
  }
})();

export { elasticClient };