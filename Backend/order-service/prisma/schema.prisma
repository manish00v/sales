datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Customer {
  customerId      String       @id @default(uuid())
  productId       String 
  customerName    String
  emailId         String       
  phoneNumber     String
  billingAddress  String
  shippingAddress String
  customerGroup   String
  creditLimit     Float
  status          String

  // Relationships
  lineItems       LineItems[]
  salesPersons    SalesPerson[]
  salesOrders     SalesOrder[]
}

model SalesOrder {
  orderId         String      @id @default(uuid())
  customerId      String
  productId       String
  orderDate       DateTime    @default(now())
  requiredDate    DateTime    @default(now())
  orderStatus     String      @default("Pending")
  paymentStatus   String      @default("Unpaid")
  deliveryBlock   String      @default("pending")
  totalAmount     Float       @default(0)

  // Relationships
  lineItems       LineItems[]
  salesPersons    SalesPerson[]
  customer        Customer    @relation(fields: [customerId], references: [customerId])
}

model LineItems {
  orderLineItemId String      @id @default(uuid())
  orderId         String
  productId       String
  customerId      String
  quantity        Int
  unitPrice       Float
  discount        Float
  tax             Float
  totalLinePrice  Float

  // Relationships
  salesOrder      SalesOrder  @relation(fields: [orderId], references: [orderId])
  customer        Customer    @relation(fields: [customerId], references: [customerId])
}

model SalesPerson {
  salesPersonId   String      @id @default(uuid())
  customerId      String
  orderId         String
  productId       String
  salesPersonName String
  emailId         String     
  phoneNumber     String
  region          String
  target          String  

  // Relationships
  customer        Customer    @relation(fields: [customerId], references: [customerId])
  salesOrder      SalesOrder  @relation(fields: [orderId], references: [orderId])
}